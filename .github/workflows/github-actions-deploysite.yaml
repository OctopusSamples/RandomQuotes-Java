name: Deploy Website

on:
  push:
    branches: 
      - master
      - test
env:  
  PACKAGES_FOLDER: Modules
  OUTPUT_FOLDER: PackagesOutput
  PACKAGE_NAME: randomquotes
  OCTOPUS_PROJECT_NAME: RandomQuotes  
  OCTOPUS_SPACE_NAME: JeremyM
  ENVIRONMENT: Development
  CHANNEL: Default
  OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}   # API key used with Octopus Deploy instance
  OCTOPUS_HOST: ${{ secrets.OCTOPUS_URL }}       # address of Octopus Deploy instance (i.e. https://demo.octopus.app)     
  OCTOPUS_SPACE: 'Spaces-83'


jobs:
  build:
    name: Build and Push Website
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2    
    - name: Set environment variables
      run: |
        $branchName = ((${env:GITHUB_REF} -replace "refs/heads/", "") -replace "feature/", "") -replace "bugfix/", ""
        Write-Host "Branch name: $branchName"  

        $defaultVersionPrefix = "1.0"
        $versionNumber = "$defaultVersionPrefix.${{ github.RUN_NUMBER }}"
        $channelName = "Default"
        $deployEnvironment = "Development"

        $commitMessage = git log -1 --pretty=oneline
        Write-Host "The commit message is: $commitMessage"

        if ($branchName -ne "master")
        {
           $versionNumber = "0.0.${{ github.RUN_NUMBER }}"
           $channelName = "Feature Branches"
           $deployEnvironment = "Test"           
        }

        Write-Host "Setting environment variable PACKAGE_VERSION to: $versionNumber"
        Write-Host "Setting environment variable BRANCH_NAME to: $branchName"
        Write-Host "Setting environment variable CHANNEL_NAME to: $channelName"
        Write-Host "Setting environment variable ENVIRONMENT_NAME to: $deployEnvironment"
        echo "BRANCH_NAME=$branchName" | Out-File -FilePath $env:GITHUB_ENV  -Append
        echo "PACKAGE_VERSION=$versionNumber" | Out-File -FilePath $env:GITHUB_ENV  -Append
        echo "CHANNEL_NAME=$channelName" | Out-File -FilePath $env:GITHUB_ENV  -Append
        echo "ENVIRONMENT_NAME=$deployEnvironment" | Out-File -FilePath $env:GITHUB_ENV  -Append
      shell: pwsh
    
    - name: Build Website
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
      run: |
        mvn versions:set -DnewVersion="1.0.0"
        mvn clean test package -Pwar
        Rename-Item -Path "${{ github.WORKSPACE }}/target/${{ env.PACKAGE_NAME }}.1.0.0.war" -NewName "${{ github.WORKSPACE }}/target/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.war"
      shell: pwsh
      
    #- name: Install Octopus CLI
    #  uses: OctopusDeploy/install-octopus-cli-action@v1.2.0
    #  with:
    #    version: latest
      
    #- name: Push Package to Octopus Deploy
    #  uses: OctopusDeploy/push-package-action@v2.1.0
    #  with:
    #    #api_key: ${{ secrets.OCTOPUS_API_KEY }}
    #    log_level: verbose
    #    overwrite_mode: OverwriteExisting
    #    packages: ${{ github.WORKSPACE }}/target/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.war
    #    #server: ${{ secrets.OCTOPUS_URL }}
    #    space: ${{ env.OCTOPUS_SPACE_NAME }}
 
    - name: Push a package to Octopus Deploy üêô
      uses: OctopusDeploy/push-package-action@v3
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_SPACE: 'Default'
      with:
        packages: |
          ${{ github.WORKSPACE }}/target/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.war  

    - name: Push Build Information to Octopus Deploy
        # You may pin to the exact commit or the version.
        # uses: OctopusDeploy/push-build-information-action@5096721de3c3074bb3906ee25eff7339ad4cdde3
      uses: OctopusDeploy/push-build-information-action@v1.0.1
      with:
          # A multi-line list of packages to push to Octopus Deploy.
        packages: ${{ env.PACKAGE_NAME }}
          # The version of the package(s)
        version: ${{ env.PACKAGE_VERSION }}
      
    - name: Create Release in Octopus Deploy
      uses: OctopusDeploy/create-release-action@v2.0.1
      with:
        #api_key: ${{ secrets.OCTOPUS_API_KEY }}
        channel: ${{ env.CHANNEL_NAME }}
        deploy_to: ${{ env.ENVIRONMENT_NAME }}
        log_level: verbose
        package_version: ${{ env.PACKAGE_VERSION }} 
        project: ${{ env.OCTOPUS_PROJECT_NAME }}
        release_number: ${{ env.PACKAGE_VERSION }} 
        #server: ${{ secrets.OCTOPUS_URL }}
        space: ${{ env.OCTOPUS_SPACE_NAME }}
        
    - name: Run Runbook in Octopus Deploy
      # You may pin to the exact commit or the version.
      # uses: OctopusDeploy/run-runbook-action@dc576c7ad9f6df07bdabafbff90c9536a4b547ac
      uses: OctopusDeploy/run-runbook-action@v2.0.1
      with:
        # The name or ID of the project associated with this runbook.
        project: ${{ env.OCTOPUS_PROJECT_NAME }}
        # The name or ID of the runbook. If the name is supplied, the project input value must also be specified.
        runbook: GHARunbook
        # A comma-delimited list of environments in Octopus Deploy in which to run (i.e. "Dev,Test,Prod").
        environments: Development
        # The name or ID of a space within which this command will be executed. If omitted, the default space will be used.
        space: ${{ env.OCTOPUS_SPACE_NAME }}
        variables: variable.one:blah,variable.two:${{ env.PACKAGE_VERSION }}

