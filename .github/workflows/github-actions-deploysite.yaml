name: Deploy Website

on:
  push:
    branches: 
      - master
      - test
env:  
  PACKAGES_FOLDER: Modules
  OUTPUT_FOLDER: PackagesOutput
  PACKAGE_NAME: randomquotes
  OCTOPUS_PROJECT_NAME: RandomQuotes  
  OCTOPUS_SPACE_NAME: JeremyM
  ENVIRONMENT: Development
  CHANNEL: Default

jobs:
  build:
    name: Build and Push Website
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2    
    - name: Set environment variables
      run: |
        $branchName = ((${env:GITHUB_REF} -replace "refs/heads/", "") -replace "feature/", "") -replace "bugfix/", ""
        Write-Host "$branchName"  

        $defaultVersionPrefix = "1.0"
        $versionNumber = "$defaultVersionPrefix.${{ github.RUN_NUMBER }}"
        $channelName = "Default"
        $deployEnvironment = "Development"

        $commitMessage = git log -1 --pretty=oneline
        Write-Host "The commit message is: $commitMessage"

        if ($branchName -ne "master")
        {
           $versionNumber = "0.0.${{ github.RUN_NUMBER }}"
           $channelName = "Feature Branches"
           $deployEnvironment = "Test"           
        }

        Write-Host "Setting environment variable PACKAGE_VERSION to: $versionNumber"
        Write-Host "Setting environment variable BRANCH_NAME to: $branchName"
        Write-Host "Setting environment variable CHANNEL_NAME to: $channelName"
        Write-Host "Setting environment variable ENVIRONMENT_NAME to: $deployEnvironment"
        echo "BRANCH_NAME=$branchName" | Out-File -FilePath $env:GITHUB_ENV  -Append
        echo "PACKAGE_VERSION=$versionNumber" | Out-File -FilePath $env:GITHUB_ENV  -Append
        echo "CHANNEL_NAME=$channelName" | Out-File -FilePath $env:GITHUB_ENV  -Append
        echo "ENVIRONMENT_NAME=$deployEnvironment" | Out-File -FilePath $env:GITHUB_ENV  -Append
      shell: pwsh
    
    - name: Build Website
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
      run: |
        $version = "${{ env.PACKAGE_VERSION }}"
        mvn versions:set -DnewVersion=$version
        mvn clean test package -Pwar
        cd target
        ls
        Write-Host "Test"
        #Rename-Item -Path "${{ env.PACKAGE_NAME }}.1.war" -NewName "${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.war"
      shell: pwsh
      
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.1
      with:
        version: latest
      
    - name: Push Package to Octopus Deploy
      uses: OctopusDeploy/push-package-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_KEY }}
        log_level: verbose
        overwrite_mode: OverwriteExisting
        packages: ${{ github.WORKSPACE }}/target/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.war
        server: ${{ secrets.OCTOPUS_URL }}
        space: ${{ env.OCTOPUS_SPACE_NAME }}

    - name: Push Build Information
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}        
      run: |
        Write-Host "Building the build information"   
        $commitMessage = git log -1 --pretty=oneline
        $commitMessage = $commitMessage -replace "${{ github.SHA }} ", ""
        Write-Host "Commit Message: $commitMessage"        

        $jsonBody = @{
          BuildEnvironment = "GitHub Actions"
          Branch = "${{ github.REF_NAME }}"
          BuildNumber = "${{ github.RUN_NUMBER }}"
          BuildUrl = "https://github.com/${{ github.REPOSITORY }}/actions/runs/${{ github.RUN_ID }}"
          VcsCommitNumber = "${{ github.SHA }}"
          VcsType = "Git"
          VcsRoot = "https://github.com/${{ github.REPOSITORY }}.git"
          Commits = @(
            @{
              Id = "${{ github.SHA }}"
              LinkUrl = "https://github.com/${{ github.REPOSITORY }}/commit/${{ github.SHA }}"
              Comment = "$commitMessage"
            }
          )
        } | ConvertTo-Json -Depth 10

        New-Item "buildinformation.json" -ItemType File
        Set-Content -Path "buildinformation.json" -Value $jsonBody
        octo build-information --package-id="${{ env.PACKAGE_NAME }}" --file="buildinformation.json" --version="${{ env.PACKAGE_VERSION }} " --server="${{ env.OCTOPUS_URL }}" --apiKey="${{ env.OCTOPUS_API_KEY }}" --space="${{ env.OCTOPUS_SPACE_NAME }}"
     
      shell: pwsh
      
    - name: Create Release in Octopus Deploy
      uses: OctopusDeploy/create-release-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_KEY }}
        channel: ${{ env.CHANNEL_NAME }}
        deploy_to: ${{ env.ENVIRONMENT_NAME }}
        log_level: verbose
        package_version: ${{ env.PACKAGE_VERSION }} 
        project: ${{ env.OCTOPUS_PROJECT_NAME }}
        release_number: ${{ env.PACKAGE_VERSION }} 
        server: ${{ secrets.OCTOPUS_URL }}
        space: ${{ env.OCTOPUS_SPACE_NAME }}
    
