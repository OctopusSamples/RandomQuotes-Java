name: Deploy Website

on:
  push:
    branches: 
      - master

env:  
  PACKAGES_FOLDER: Modules
  OUTPUT_FOLDER: PackagesOutput
  PACKAGE_NAME: RandomQuotes
  OCTOPUS_PROJECT_NAME: RandomQuotes  
  OCTOPUS_SPACE_NAME: JeremyM

jobs:
  build:
    name: Build and Push Website

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v2.4.0
      with:
          java-version: '11'
          distribution: 'adopt'
    - shell: pwsh
      run: echo "mypath" | Out-File -FilePath $env:GITHUB_PATH
    - name: Set environment variables      
      run: |
        $branchName = ((${env:GITHUB_REF} -replace "refs/heads/", "") -replace "feature/", "") -replace "bugfix/", ""
        Write-Host "$branchName"  

        $versionFromFile = "1.0"
        Write-Host "Found $versionFromFile in versionprefix.md"
        $versionNumber = "$versionfromFile.$GITHUB_RUN_NUMBER"
        echo "$GITHUB_RUN_NUMBER"
        echo "above me"
        $channelName = "Default"
        $deployEnvironment = "Development"
        $mergedBranch = ""

        $commitMessage = git log -1 --pretty=oneline
        Write-Host "The commit message is: $commitMessage"

        if ($branchName -ne "master")
        {
           $versionNumber = "2020.99.99.${{env.GITHUB_RUN_NUMBER}}"
           $versionNumber = "$versionNumber-$branchName"
           $channelName = "Feature Branches"
           $deployEnvironment = "Test"           
        }
        elseif ($branchName -eq "master" -and $commitMessage -like "*Merge pull request*")
        {          
          $indexOfSlash = $commitMessage.ToString().IndexOf('/')
          Write-Host "The index of the slash is $indexOfSlash"
          $mergedBranch = $commitMessage.SubString($commitMessage.IndexOf("/") + 1)
          Write-Host "The merged branch before replacement is $mergedBranch"
          $mergedBranch = ($mergedBranch -replace "feature/", "") -replace "bugfix/", ""          
          Write-Host "The merged branch is now $mergedBranch"
        }

        Write-Host "Setting environment variable PACKAGE_VERSION to: $versionNumber"
        Write-Host "Setting environment variable BRANCH_NAME to: $branchName"
        Write-Host "Setting environment variable CHANNEL_NAME to: $channelName"
        Write-Host "Setting environment variable ENVIRONMENT_NAME to: $deployEnvironment"
        Write-Host "Setting environment variable MERGED_BRANCH to: $mergedBranch"
        echo "BRANCH_NAME=$branchName" >> $GITHUB_ENV
        echo "PACKAGE_VERSION=$versionNumber" >> $GITHUB_ENV
        echo "CHANNEL_NAME=$channelName" >> $GITHUB_ENV
        echo "ENVIRONMENT_NAME=$deployEnvironment" >> $GITHUB_ENV
        echo "MERGED_BRANCH=$mergedBranch" >> $GITHUB_ENV
      shell: pwsh

    - name: Install Octopus Tooling
      run: choco install octopustools -y
      shell: pwsh

    - name: Make Install Modules Folder
      run: New-Item "$SScriptRoot\${{env.PACKAGES_FOLDER}}" -ItemType Directory -Force
      shell: pwsh

    - name: Make Packages Output Folder
      run: New-Item "${{env.OUTPUT_FOLDER}}" -ItemType Directory
      shell: pwsh
    
    - name: Build Website      
      run: |
        mvn versions:set -DnewVersion=1.0.$BUILD_NUMBER
        mvn clean test package -Pwar
        
      shell: pwsh   
      
    
