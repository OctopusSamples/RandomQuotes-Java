name: Deploy Website

on:
  push:
    branches: 
      - master

env:  
  PACKAGES_FOLDER: Modules
  OUTPUT_FOLDER: PackagesOutput
  PACKAGE_NAME: RandomQuotes
  OCTOPUS_PROJECT_NAME: RandomQuotes  
  OCTOPUS_SPACE_NAME: JeremyM
  ENVIRONMENT: Development
  CHANNEL: Default

jobs:
  build:
    name: Build and Push Website

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v2.4.0
      with:
          java-version: '11'
          distribution: 'adopt'
    - shell: pwsh
      #run: echo "mypath" | Out-File -FilePath $env:GITHUB_PATH
      run: echo "mypath" | Out-File -FilePath ${{ github.path }}
    - name: Set environment variables      
      run: |
        $branchName = ((${env:GITHUB_REF} -replace "refs/heads/", "") -replace "feature/", "") -replace "bugfix/", ""
        Write-Host "$branchName"  

        $versionFromFile = "1.0"
        Write-Host "Found $versionFromFile in versionprefix.md"
        $versionNumber = "$versionfromFile.${{ github.RUN_NUMBER }}"
        $channelName = "Default"
        $deployEnvironment = "Development"
        $mergedBranch = ""

        $commitMessage = git log -1 --pretty=oneline
        Write-Host "The commit message is: $commitMessage"

        if ($branchName -ne "master")
        {
           $versionNumber = "2020.99.99.${{env.GITHUB_RUN_NUMBER}}"
           $versionNumber = "$versionNumber-$branchName"
           $channelName = "Feature Branches"
           $deployEnvironment = "Test"           
        }
        elseif ($branchName -eq "master" -and $commitMessage -like "*Merge pull request*")
        {          
          $indexOfSlash = $commitMessage.ToString().IndexOf('/')
          Write-Host "The index of the slash is $indexOfSlash"
          $mergedBranch = $commitMessage.SubString($commitMessage.IndexOf("/") + 1)
          Write-Host "The merged branch before replacement is $mergedBranch"
          $mergedBranch = ($mergedBranch -replace "feature/", "") -replace "bugfix/", ""          
          Write-Host "The merged branch is now $mergedBranch"
        }

        Write-Host "Setting environment variable PACKAGE_VERSION to: $versionNumber"
        Write-Host "Setting environment variable BRANCH_NAME to: $branchName"
        Write-Host "Setting environment variable CHANNEL_NAME to: $channelName"
        Write-Host "Setting environment variable ENVIRONMENT_NAME to: $deployEnvironment"
        Write-Host "Setting environment variable MERGED_BRANCH to: $mergedBranch"
        echo "BRANCH_NAME=$branchName" >> $GITHUB_ENV
        echo "PACKAGE_VERSION=$versionNumber" >> $GITHUB_ENV
        echo "CHANNEL_NAME=$channelName" >> $GITHUB_ENV
        echo "ENVIRONMENT_NAME=$deployEnvironment" >> $GITHUB_ENV
        echo "MERGED_BRANCH=$mergedBranch" >> $GITHUB_ENV
      shell: pwsh

    - name: Install Octopus Tooling
      run: |
        sudo apt update && sudo apt install --no-install-recommends gnupg curl ca-certificates apt-transport-https && \
        curl -sSfL https://apt.octopus.com/public.key | sudo apt-key add - && \
        sudo sh -c "echo deb https://apt.octopus.com/ stable main > /etc/apt/sources.list.d/octopus.com.list" && \
        sudo apt update && sudo apt install octopuscli
      shell: bash
    
    - name: Build Website
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
      run: |
        mvn versions:set -DnewVersion=1.0.${{ github.RUN_NUMBER }}
        mvn clean test package -Pwar
        cd target
        ls
        /opt/octopus/octopuscli/octo pack --id RandomQuotes --version="1.0.${{ github.RUN_NUMBER }}" --format zip --overwrite
        /opt/octopus/octopuscli/octo push --package="${{ env.PACKAGE_NAME }}.1.0.${{ github.RUN_NUMBER }}.zip" --server="${{ env.OCTOPUS_URL }}" --apiKey="${{ env.OCTOPUS_API_KEY }}" --space="${{ env.OCTOPUS_SPACE_NAME }}"
        
      shell: pwsh   
      
    - name: Handoff to Octopus Deploy
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}        
      run: |
        
        

        Write-Host "Building the build information"
        
        $commitMessage = git log -1 --pretty=oneline
        $commitMessage = $commitMessage -replace "${{ github.SHA }} ", ""
        Write-Host "Commit Message: $commitMessage"        

        $jsonBody = @{
          BuildEnvironment = "GitHub Actions"
          Branch = "${{ github.REF_NAME }}"
          BuildNumber = "${{ github.RUN_NUMBER }}"
          BuildUrl = "https://github.com/${{ github.REPOSITORY }}/actions/runs/${{ github.RUN_ID }}"
          VcsCommitNumber = "${{ github.SHA }}"
          VcsType = "Git"
          VcsRoot = "https://github.com/${{ github.REPOSITORY }}.git"
          Commits = @(
            @{
              Id = "${{ github.SHA }}"
              LinkUrl = "https://github.com/${{ github.REPOSITORY }}/commit/${{ github.SHA }}"
              Comment = "$commitMessage"
            }
          )
        } | ConvertTo-Json -Depth 10

        New-Item "buildinformation.json" -ItemType File
        Set-Content -Path "buildinformation.json" -Value $jsonBody

        /opt/octopus/octopuscli/octo build-information --package-id="${{ env.PACKAGE_NAME }}" --file="buildinformation.json" --version="1.0.${{ github.RUN_NUMBER }}" --server="${{ env.OCTOPUS_URL }}" --apiKey="${{ env.OCTOPUS_API_KEY }}" --space="${{ env.OCTOPUS_SPACE_NAME }}"
        /opt/octopus/octopuscli/octo create-release --project="${{ env.OCTOPUS_PROJECT_NAME }}" --packageVersion="1.0.${{ github.RUN_NUMBER }}" --releaseNumber="1.0.${{ github.RUN_NUMBER }}" --server="${{ env.OCTOPUS_URL }}" --apiKey="${{ env.OCTOPUS_API_KEY }}" --space="${{ env.OCTOPUS_SPACE_NAME }}" --deployTo="${{ env.ENVIRONMENT }}" --channel="${{ env.CHANNEL }}" --variable="Feature Branch Name:${{ env.BRANCH_NAME }}" --variable="Merged Branch Name:${{ env.MERGED_BRANCH }}"

      shell: pwsh        
      
    
